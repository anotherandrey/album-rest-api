plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.0-M5'
    id 'io.spring.dependency-management' version '1.1.0'
    id "org.openapi.generator" version "6.0.0"
}

group 'org.album'
version '1.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://plugins.gradle.org/m2/' }
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.postgresql:postgresql'

    /* flyway core (db migration) */
    implementation 'org.flywaydb:flyway-core'

    /* validation for openapi */
    implementation "org.springframework.boot:spring-boot-starter-validation"

    /* swagger annotations for openapi */
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.2'

    implementation 'org.apache.commons:commons-lang3'
    implementation 'com.google.guava:guava:31.1-jre'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    /* test */
    implementation 'org.springframework.boot:spring-boot-starter-test'

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

test {
    useJUnitPlatform()
}

def CONFIG_OPTIONS = [
    'useTags': 'true',
    'useSpringBoot3': 'true',
    'snapshotVersion': 'true',
    'interfaceOnly': 'true',
    'openApiNullable': 'false',
]

task generateAlbumApi(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    generatorName = 'spring'
    inputSpec = "$rootDir/src/main/resources/openapi/v1/album.yaml"
    outputDir = "$rootDir"
    templateDir = "$rootDir/src/main/resources/openapi/"
    apiPackage = 'org.album.openapi.v1.album'
    modelPackage = 'org.album.openapi.v1.album'
    configOptions = CONFIG_OPTIONS
}

tasks.named('compileJava') {
    dependsOn tasks.named('generateAlbumApi')
}

tasks.named('compileTestJava') {
    dependsOn tasks.named('generateAlbumApi')
}
